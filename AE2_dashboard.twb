<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='final_df' inline='true' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final_df' name='textscan.0rdffj30m5baty1g3ei4s198a6q8'>
            <connection class='textscan' directory='C:/Users/lapde/OneDrive - Solent University/Desktop/New folder/New folder' filename='final_df.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0rdffj30m5baty1g3ei4s198a6q8' name='final_df.csv' table='[final_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Start Date' ordinal='0' />
            <column datatype='date' name='End Date' ordinal='1' />
            <column datatype='string' name='Group' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='string' name='Place of Death' ordinal='6' />
            <column datatype='integer' name='COVID-19 Deaths' ordinal='7' />
            <column datatype='integer' name='Total Deaths' ordinal='8' />
            <column datatype='integer' name='Pneumonia Deaths' ordinal='9' />
            <column datatype='integer' name='Pneumonia and COVID-19 Deaths' ordinal='10' />
            <column datatype='integer' name='Influenza Deaths' ordinal='11' />
            <column datatype='integer' name='Pneumonia, Influenza, or COVID-19 Deaths' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0rdffj30m5baty1g3ei4s198a6q8' name='final_df.csv' table='[final_df#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='date' name='Start Date' ordinal='0' />
            <column datatype='date' name='End Date' ordinal='1' />
            <column datatype='string' name='Group' ordinal='2' />
            <column datatype='integer' name='Year' ordinal='3' />
            <column datatype='integer' name='Month' ordinal='4' />
            <column datatype='string' name='State' ordinal='5' />
            <column datatype='string' name='Place of Death' ordinal='6' />
            <column datatype='integer' name='COVID-19 Deaths' ordinal='7' />
            <column datatype='integer' name='Total Deaths' ordinal='8' />
            <column datatype='integer' name='Pneumonia Deaths' ordinal='9' />
            <column datatype='integer' name='Pneumonia and COVID-19 Deaths' ordinal='10' />
            <column datatype='integer' name='Influenza Deaths' ordinal='11' />
            <column datatype='integer' name='Pneumonia, Influenza, or COVID-19 Deaths' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Place of Death</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Place of Death]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Place of Death</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pneumonia Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pneumonia Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Pneumonia Deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pneumonia and COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pneumonia and COVID-19 Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Pneumonia and COVID-19 Deaths</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Influenza Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Influenza Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Influenza Deaths</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pneumonia, Influenza, or COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pneumonia, Influenza, or COVID-19 Deaths]</local-name>
            <parent-name>[final_df.csv]</parent-name>
            <remote-alias>Pneumonia, Influenza, or COVID-19 Deaths</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[COVID-19 Deaths (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='3' formula='[COVID-19 Deaths]' peg='0' size='1962' />
      </column>
      <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Pneumonia Deaths]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='final_df.csv' datatype='table' name='[__tableau_internal_object_id__].[final_df.csv_7D5EE810201B48818222AF63DB27B8A4]' role='measure' type='quantitative' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Pneumonia Deaths]' derivation='Sum' name='[sum:Pneumonia Deaths:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia Deaths:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='final_df.csv' id='final_df.csv_7D5EE810201B48818222AF63DB27B8A4'>
            <properties context=''>
              <relation connection='textscan.0rdffj30m5baty1g3ei4s198a6q8' name='final_df.csv' table='[final_df#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='date' name='Start Date' ordinal='0' />
                  <column datatype='date' name='End Date' ordinal='1' />
                  <column datatype='string' name='Group' ordinal='2' />
                  <column datatype='integer' name='Year' ordinal='3' />
                  <column datatype='integer' name='Month' ordinal='4' />
                  <column datatype='string' name='State' ordinal='5' />
                  <column datatype='string' name='Place of Death' ordinal='6' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='7' />
                  <column datatype='integer' name='Total Deaths' ordinal='8' />
                  <column datatype='integer' name='Pneumonia Deaths' ordinal='9' />
                  <column datatype='integer' name='Pneumonia and COVID-19 Deaths' ordinal='10' />
                  <column datatype='integer' name='Influenza Deaths' ordinal='11' />
                  <column datatype='integer' name='Pneumonia, Influenza, or COVID-19 Deaths' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_8626384EA9E54F3A951010B5EECDB254]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='State' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='20 states with least mortality'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Avg' name='[avg:Total Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <groupfilter count='20' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([Total Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[avg:Total Deaths:qk]' />
              <text column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' />
              <text column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Total Deaths:qk]' />
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{FD9A3299-FB52-4268-A7C9-220E6B947C3D}' />
    </worksheet>
    <worksheet name='Dual Axis Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Pneumonia Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pneumonia Deaths]' derivation='Sum' name='[sum:Pneumonia Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia Deaths:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='width' field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' value='112' />
            <format attr='width' field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia Deaths:qk]' value='112' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk] + [federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia Deaths:qk])</rows>
        <cols>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{C8F74E32-594A-4302-83B9-06EB813759DD}' />
    </worksheet>
    <worksheet name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='integer' name='[Pneumonia, Influenza, or COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pneumonia, Influenza, or COVID-19 Deaths]' derivation='Sum' name='[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Pneumonia, Influenza, or COVID-19 Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:State:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;United States&quot;' />
                    <groupfilter function='member' level='[none:State:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' />
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' />
              <text column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' />
              <text column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E33D15F9-CB38-49A6-98A8-4ED816707DA1}' />
    </worksheet>
    <worksheet name='Polynomial Trend Line Projection'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='date' name='[Start Date]' role='dimension' type='ordinal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Start Date]' derivation='Year' name='[yr:Start Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <trendline degree='2' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]</rows>
        <cols>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[yr:Start Date:ok]</cols>
      </table>
      <simple-id uuid='{46AFB316-C706-4DA3-8D16-9BF80434D6EC}' />
    </worksheet>
    <worksheet name='Top 15 COVID-19 Deaths vs Total Deaths states'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([COVID-19 Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:State:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:State:nk]' member='&quot;United States&quot;' />
                    <groupfilter function='member' level='[none:State:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' />
              <size column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/triangle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Total Deaths:qk]</rows>
        <cols>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]</cols>
      </table>
      <simple-id uuid='{20E30998-7AA7-404A-ABF9-D6797D06EA6E}' />
    </worksheet>
    <worksheet name='Top 15 states with maximum mortality'>
      <layout-options>
        <title>
          <formatted-text>
            <run><![CDATA[<Top 15 states with maximum mortality>]]></run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total Deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;New York City&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
                  <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Total Deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#76b7b2' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Total Deaths:qk]</rows>
        <cols>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</cols>
      </table>
      <simple-id uuid='{65596670-4D85-434C-A687-1ED21886D1FA}' />
    </worksheet>
    <worksheet name='Total COVID-19 Deaths in different states of USA'>
      <table>
        <view>
          <datasources>
            <datasource caption='final_df' name='federated.0il1c7v1mddxvk1a5yu3n1bsyry2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0il1c7v1mddxvk1a5yu3n1bsyry2'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;New York City&quot;' value='&quot;New York&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:State:nk]' member='&quot;United States&quot;' />
                <groupfilter function='member' level='[none:State:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' />
              <text column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' />
              <lod column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' />
              <lod column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' />
              <geometry column='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[Latitude (generated)]</rows>
        <cols>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9F22D334-D2F3-4906-8862-7AE5352CFE09}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='929'>
            <zone h='98142' id='6' type-v2='layout-basic' w='89378' x='483' y='929'>
              <zone h='49071' id='3' name='Top 15 states with maximum mortality' w='22348' x='22821' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='5' name='Total COVID-19 Deaths in different states of USA' w='44692' x='45169' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='10' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' w='22351' x='67510' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='12' name='20 states with least mortality' w='22348' x='22821' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='14' name='Top 15 COVID-19 Deaths vs Total Deaths states' w='22338' x='483' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='16' name='Dual Axis Chart' w='22341' x='45169' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49071' id='18' name='Polynomial Trend Line Projection' w='22338' x='483' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98142' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='929'>
              <zone h='8478' id='9' name='Total COVID-19 Deaths in different states of USA' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type-v2='color' w='9656' x='89861' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8478' id='11' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' type-v2='color' w='9656' x='89861' y='9407'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='52265' id='13' name='20 states with least mortality' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' type-v2='color' w='9656' x='89861' y='17885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='18118' id='15' name='Top 15 COVID-19 Deaths vs Total Deaths states' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type-v2='size' w='9656' x='89861' y='70150'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8362' id='17' name='Dual Axis Chart' pane-specification-id='1' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' type-v2='color' w='9656' x='89861' y='88268'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2400' minheight='2400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='23' param='vert' type-v2='layout-flow' w='99034' x='483' y='929'>
                <zone fixed-size='280' h='49071' id='18' is-fixed='true' name='Polynomial Trend Line Projection' w='22338' x='483' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='12' is-fixed='true' name='20 states with least mortality' w='22348' x='22821' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='52265' id='13' name='20 states with least mortality' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' type-v2='color' w='9656' x='89861' y='17885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='5' is-fixed='true' name='Total COVID-19 Deaths in different states of USA' w='44692' x='45169' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='9' name='Total COVID-19 Deaths in different states of USA' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type-v2='color' w='9656' x='89861' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='14' is-fixed='true' name='Top 15 COVID-19 Deaths vs Total Deaths states' w='22338' x='483' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18118' id='15' name='Top 15 COVID-19 Deaths vs Total Deaths states' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type-v2='size' w='9656' x='89861' y='70150'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='3' is-fixed='true' name='Top 15 states with maximum mortality' w='22348' x='22821' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='16' is-fixed='true' name='Dual Axis Chart' w='22341' x='45169' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8362' id='17' name='Dual Axis Chart' pane-specification-id='1' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' type-v2='color' w='9656' x='89861' y='88268'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49071' id='10' is-fixed='true' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' w='22351' x='67510' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8478' id='11' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' type-v2='color' w='9656' x='89861' y='9407'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{14633953-04C0-4415-928D-C7461B04394A}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Top 15 states with maximum mortality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{22209F70-E26C-4CBA-98A7-3B5819CDC23F}' />
    </window>
    <window class='worksheet' name='Total COVID-19 Deaths in different states of USA'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <map-navigation value='1' />
      </viewpoint>
      <simple-id uuid='{45F1ADC6-B028-4641-880A-F392C622568F}' />
    </window>
    <window class='worksheet' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:Pneumonia, Influenza, or COVID-19 Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA3FF72D-522F-4A4E-ABDC-42C87D3B20BD}' />
    </window>
    <window class='worksheet' name='20 states with least mortality'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='100'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9951625-FF91-44E0-BB13-08AFB73570A5}' />
    </window>
    <window class='worksheet' name='Top 15 COVID-19 Deaths vs Total Deaths states'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E4D0904-9A8B-4785-A468-6281C64F0C13}' />
    </window>
    <window class='worksheet' name='Dual Axis Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E749F6FF-DC82-4429-AE19-EC725E146D04}' />
    </window>
    <window class='worksheet' name='Polynomial Trend Line Projection'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:Year:qk]</field>
            <field>[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[yr:Start Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1A02404-33A1-4D25-9538-E81A29C3522E}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='20 states with least mortality'>
          <highlight field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[none:State:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Dual Axis Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' />
        <viewpoint name='Polynomial Trend Line Projection'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 15 COVID-19 Deaths vs Total Deaths states'>
          <zoom type='entire-view' />
          <highlight field='[federated.0il1c7v1mddxvk1a5yu3n1bsyry2].[sum:COVID-19 Deaths:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Top 15 states with maximum mortality'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total COVID-19 Deaths in different states of USA'>
          <zoom type='entire-view' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{DE9AC9F7-3E45-494C-BE0C-353B259C2D1A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='20 states with least mortality' width='192'>
      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
      bkno2B9tXBgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dual Axis Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Deaths in United States due to Covid,Influenza, Pneumonia and top 10 states effected' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Polynomial Trend Line Projection' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 15 COVID-19 Deaths vs Total Deaths states' width='192'>
      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
      q/1/XwpL9ETAak0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 15 states with maximum mortality' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total COVID-19 Deaths in different states of USA' width='192'>
      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
      lu8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
